{"version":3,"sources":["components/Button.js","components/Header.js","components/Project.js","components/ProjectList.js","components/ContactInfo.js","components/GotoTopButton.js","App.js","serviceWorker.js","index.js"],"names":["Button","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","text","props","goto","react_default","a","createElement","className","role","href","Component","Header","id","src","alt","Button_Button","Project","name","tags","desc","img","ProjectList","title","projects","forEach","item","push","Project_Project","ContactInfo","GotoTopButton","App","components_Header","components_ProjectList","components_ContactInfo","components_GotoTopButton","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9eb3153.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Button extends Component {\r\n    render() {\r\n\r\n        const text = this.props.text;\r\n        const goto = this.props.goto;\r\n\r\n        return <a className=\"btn btn-custom btn-lg\" role=\"button\" href={goto}>{text}</a>\r\n    }\r\n}\r\n\r\nexport default Button\r\n","import React, { Component } from 'react'\r\nimport { Button } from \"./Button\";\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header id=\"site-header\" className=\"page-header black block is-center-aligned\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <img className=\"site-logo\" src=\"./logo@2x.png\" alt=\"Rafael Avilar portfólio\" />\r\n                            <div className=\"content\">\r\n                                <p><span className=\"is-tinted\">Olá!</span> Meu nome é <span className=\"is-tinted\">Rafael</span>, e atualmente estou estudando <span className=\"is-tinted\">Sistemas e Mídias Digitais</span> na <span className=\"is-tinted\">UFC</span> de Fortaleza.</p>\r\n                                <p>Primariamente trabalho com <span className=\"is-tinted\">webdev</span> no <span className=\"is-tinted\">front-end</span>, <span className=\"is-tinted\">WordPress</span> e também estou aprendendo <span className=\"is-tinted\">back</span>. Logo abaixo de web, minha segunda área de maior experiência é <span className=\"is-tinted\">mobile</span>, especialmente <span className=\"is-tinted\">android nativo</span>.</p>\r\n                                <p>Fiz esse sitezinho para servir de <span className=\"is-tinted\">portfólio</span> e mostrar alguns dos projetos que desenvolvi até então.</p>\r\n                            </div>\r\n                            <nav>\r\n                                <Button text=\"Projetos\" goto=\"#projects\"></Button>\r\n                                <Button text=\"Contato\" goto=\"#contact-info\"></Button>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class Project extends Component {\r\n    render() {\r\n\r\n        const name = this.props.name;\r\n        const tags = this.props.tags;\r\n        const desc = this.props.desc;\r\n        const img = \"./img/\" + this.props.img;\r\n\r\n        return (\r\n            <article className=\"project\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md is-center-aligned\">\r\n                        <img className=\"project-thumb has-shadow\" src={img} alt={\"Imagem do projeto: \" + name}/>\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        <div className=\"project-content\">\r\n                            <h4>{name}</h4>\r\n                            <p className=\"is-tinted\">{tags}</p>\r\n                            <p>{desc}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project\r\n","import React, { Component } from 'react'\r\nimport { Project } from \"./Project\";\r\n\r\nexport class ProjectList extends Component {\r\n    render() {\r\n\r\n        // Titulo dessa lista\r\n        var title_s = this.props.title;\r\n        var title;\r\n        if (title_s) {\r\n            title = <h2 className=\"is-center-aligned\">{this.props.title}</h2>;\r\n        }\r\n\r\n        // Projetos que deve mostrar\r\n        const projects = [];\r\n        this.props.projects.forEach((item) => {\r\n            projects.push(\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Project name={item.name} tags={item.tags} desc={item.desc} img={item.img}></Project>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <section id=\"projects\" className=\"project-list white block\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            {title}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            {projects}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\n\r\nexport class ContactInfo extends Component {\r\n    render() {\r\n        return (\r\n            <section id=\"contact-info\" className=\"contact-info block black is-center-aligned\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h2>Contato</h2>\r\n                            <div className=\"content\">\r\n                                <p>Se quiser me contactar, pode mandar um email ou dar um oi no <i>zap</i>. :)</p>\r\n                                <p>\r\n                                    <a href=\"mailto:rfl.avilar@outlook.com\">rfl.avilar@outlook.com</a> / <a href=\"tel:85999897611\">(85) 99989-7611</a>\r\n                                </p>\r\n                                <p>\r\n                                    <a href=\"https://github.com/rafero1\">GitHub</a> / <a href=\"https://linkedin.com/in/rafael-avilar\">LinkedIn</a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactInfo\r\n","import React, { Component } from 'react'\r\n\r\nexport class GotoTopButton extends Component {\r\n    render() {\r\n        const goto = this.props.goto;\r\n\r\n        return <a className=\"btn btn-custom btn-image btn-lr-hover\" role=\"button\" href={goto}><i className=\"material-icons md-18\">arrow_upward</i></a>\r\n    }\r\n}\r\n\r\nexport default GotoTopButton\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ProjectList from './components/ProjectList';\nimport ContactInfo from './components/ContactInfo';\nimport GotoTopButton from './components/GotoTopButton';\n\nfunction App() {\n\n  const PROJECTS = [\n    { name: 'Tocha', tags: 'Android, Kotlin', desc: 'App com informações históricas de prédios e departamentos da UFC, banco de dados SQLite, suporte a pesquisa FTS 4, scanner de QR codes e sistema gamificado de progressão e recompensas.', img: 'tocha/tocha-1.png' },\n    { name: 'Portfólio', tags: 'React, HTML, CSS, Bootstrap', desc: 'Portfólio simples para showcase dos projetos no GitHub Pages. Responsívo e escalável. Foram utilizados React e Bootstrap para me ajudar a aprendê-los.', img: 'folio/folio.png' },\n    { name: 'Requinte', tags: 'WordPress, JavaScript, HTML, CSS, Sass', desc: 'Site para comerciante micro-enpreendedor desenvolvido com WordPress. Ele possui três páginas, um slider de imagems, contact form e suporta modificações pelo dashboard. Também foi utilizado Sass para o CSS.', img: 'requinte/requinte-1.png' }\n  ]\n\n  return (\n    <main>\n      <Header></Header>\n      <ProjectList title=\"Portfólio\" projects={PROJECTS}></ProjectList>\n      <ContactInfo></ContactInfo>\n      <GotoTopButton goto=\"#site-header\"></GotoTopButton>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}