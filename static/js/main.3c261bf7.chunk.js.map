{"version":3,"sources":["components/Header.js","components/Project.js","components/ProjectList.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","Component","Project","name","props","tags","desc","img","src","ProjectList","title","projects","forEach","item","push","Project_Project","App","components_Header","components_ProjectList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c261bf7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"page-header block\">\r\n            \t<h1 className=\"page-title\">Rafael Avilar</h1>\r\n                <p><strong>Olá!</strong></p>\r\n                <p>Meu nome é <strong>Rafael</strong>, e atualmente estou estudando <strong>Sistemas e Mídias Digitais</strong> na <strong>UFC</strong> de Fortaleza.</p>\r\n                <p>Fiz esse sitezinho para servir de portfólio e mostrar alguns dos projetos que desenvolvi até agora.</p>\r\n                <p>Eventualmente quero adquirir um domínio próprio e modificar um pouco esse site. Quem sabe adicionar mais coisinhas legais.</p>\r\n                <p>Se quiser entrar em contato, pode usar o meu email ou <i>zapzap</i>.</p>\r\n                <p>Abraços! :)</p>\r\n        \t\t<footer>\r\n\t                <p><a href=\"mailto:rfl.avilar@outlook.com\">rfl.avilar@outlook.com</a></p>\r\n\t                <p><a href=\"tel:85999897611\">(85) 99989-7611</a></p>\r\n\t                <p><a href=\"https://github.com/rafero1\">GitHub</a> / <a href=\"https://linkedin.com/in/rafael-avilar\">LinkedIn</a></p>\r\n                </footer>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class Project extends Component {\r\n    render() {\r\n\r\n        const name = this.props.name;\r\n        const tags = this.props.tags;\r\n        const desc = this.props.desc;\r\n        const img = \"./img/\" + this.props.img;\r\n\r\n        return (\r\n            <article className=\"project\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md is-center-aligned\">\r\n                        <img className=\"project-thumb has-shadow\" src={img}/>\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        <h4>{name}</h4>\r\n                        <p className=\"is-tinted\">{tags}</p>\r\n                        <p>{desc}</p>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project\r\n","import React, { Component } from 'react'\r\nimport { Project } from \"./Project\";\r\n\r\nexport class ProjectList extends Component {\r\n    render() {\r\n\r\n        // Titulo dessa lista\r\n        var title;\r\n        if (this.props.title) {\r\n            title = <h2>{this.props.title}</h2>;\r\n        }\r\n\r\n        // Projetos que deve mostrar\r\n        const projects = [];\r\n        this.props.projects.forEach((item) => {\r\n            projects.push(\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Project name={item.name} tags={item.tags} desc={item.desc} img={item.img}></Project>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <section className=\"project-list block\">\r\n                {title}\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        {projects}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectList\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ProjectList from './components/ProjectList';\n\nfunction App() {\n\n  const PROJECTS = [\n    { name: 'Tocha', tags: 'Android, Kotlin', desc: 'App com informações históricas de prédios e departamentos da UFC, suporte a pesquisa com FTS 3, scanner de QR codes e sistema gamificado de progressão e recompensas.', img: 'tocha/tocha-1.png'},\n    { name: 'Portfólio', tags: 'HTML, CSS, Bootstrap, React', desc: 'Esse site! Foi feito com React e Bootstrap para me ajudar a aprendê-los.', img: 'folio.jpeg'}\n  ]\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-3 black\">\n          <Header></Header>\n        </div>\n        <div className=\"col-md-9\">\n          <ProjectList title=\"Portfólio\" projects={PROJECTS}></ProjectList>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}